<?xml version="1.0" encoding="UTF-8"?>
<sequence-diagram version="1.2.3" icons="true" generate-combined-fragments="true">  
  <object id="1" language="java" name="org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator" 
    project="rdltest2" file="D:/repository/org/springframework/spring-aop/5.1.3.RELEASE/spring-aop-5.1.3.RELEASE.jar" 
    binary="true" label="abstractAutoProxyCreator" type="class" autoSize="true">    
    <position height="-1" width="-1" x="397" y="0"/>    
    <execution id="2">      
      <position height="705" width="299" x="5" y="98"/>    
    </execution>    
    <execution id="4">      
      <position height="624" width="299" x="5" y="152"/>    
    </execution>    
    <execution id="6">      
      <position height="491" width="7" x="154" y="206"/>    
    </execution>    
    <execution id="8">      
      <position height="27" width="7" x="154" y="722"/>    
    </execution>  
  </object>  
  <object id="11" language="java" name="org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator" 
    project="rdltest2" file="D:/repository/org/springframework/spring-aop/5.1.3.RELEASE/spring-aop-5.1.3.RELEASE.jar" 
    binary="true" label="abstractAdvisorAutoProxyCreator" type="class" autoSize="true">    
    <position height="-1" width="-1" x="350" y="0"/>    
    <execution id="10">      
      <position height="423" width="316" x="308" y="247"/>    
    </execution>    
    <execution id="13">      
      <position height="342" width="7" x="463" y="301"/>    
    </execution>    
    <execution id="15">      
      <position height="135" width="7" x="463" y="355"/>    
    </execution>    
    <execution id="17">      
      <position height="81" width="7" x="463" y="535"/>    
    </execution>  
  </object>  
  <object id="22" language="java" name="org.springframework.aop.support.AopUtils" project="rdltest2" 
    file="D:/repository/org/springframework/spring-aop/5.1.3.RELEASE/spring-aop-5.1.3.RELEASE.jar" binary="true" 
    label="aopUtils" type="class" autoSize="true">    
    <position height="-1" width="-1" x="598" y="0"/>  
  </object>  
  <object id="23" language="java" name="org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper" 
    project="rdltest2" file="D:/repository/org/springframework/spring-aop/5.1.3.RELEASE/spring-aop-5.1.3.RELEASE.jar" 
    binary="true" label="beanFactoryAdvisorRetrievalHelper" type="class" autoSize="true">    
    <position height="-1" width="-1" x="490" y="0"/>    
    <execution id="19">      
      <position height="81" width="339" x="628" y="382"/>    
    </execution>  
  </object>  
  <object id="26" language="java" name="org.springframework.beans.factory.BeanFactoryUtils" project="rdltest2" 
    file="D:/repository/org/springframework/spring-beans/5.1.3.RELEASE/spring-beans-5.1.3.RELEASE.jar" binary="true" 
    label="beanFactoryUtils" type="class" autoSize="true">    
    <position height="-1" width="-1" x="552" y="0"/>    
    <execution id="25">      
      <position height="27" width="226" x="971" y="409"/>    
    </execution>  
  </object>  
  <object id="27" language="java" name="org.springframework.aop.support.AopUtils" project="rdltest2" 
    file="D:/repository/org/springframework/spring-aop/5.1.3.RELEASE/spring-aop-5.1.3.RELEASE.jar" binary="true" 
    label="aopUtils1" type="class" autoSize="true">    
    <position height="-1" width="-1" x="563" y="0"/>    
    <execution id="21">      
      <position height="27" width="216" x="1421" y="562"/>    
    </execution>  
  </object>  
  <message id="3" operation="postProcessAfterInstantiation(java.lang.Object,java.lang.String):boolean" 
    asynchronous="false">    
    <end type="SOURCE" refId="2"/>    
    <end type="TARGET" refId="4"/>  
  </message>  
  <message id="5" operation="wrapIfNecessary(java.lang.Object,java.lang.String,java.lang.Object):java.lang.Object" 
    asynchronous="false">    
    <end type="SOURCE" refId="4"/>    
    <end type="TARGET" refId="6"/>  
  </message>  
  <message id="7" 
    operation="createProxy(java.lang.Class&lt;?&gt;,java.lang.String,java.lang.Object[],org.springframework.aop.TargetSource):java.lang.Object" 
    asynchronous="false">    
    <end type="SOURCE" refId="4"/>    
    <end type="TARGET" refId="8"/>  
  </message>  
  <message id="9" 
    operation="getAdvicesAndAdvisorsForBean(java.lang.Class&lt;?&gt;,java.lang.String,org.springframework.aop.TargetSource):java.lang.Object[]" 
    asynchronous="false">    
    <end type="SOURCE" refId="6"/>    
    <end type="TARGET" refId="10"/>  
  </message>  
  <message id="12" 
    operation="findEligibleAdvisors(java.lang.Class&lt;?&gt;,java.lang.String):java.util.List&lt;org.springframework.aop.Advisor&gt;" 
    asynchronous="false">    
    <end type="SOURCE" refId="10"/>    
    <end type="TARGET" refId="13"/>  
  </message>  
  <message id="14" operation="findCandidateAdvisors():java.util.List&lt;org.springframework.aop.Advisor&gt;" 
    asynchronous="false">    
    <end type="SOURCE" refId="13"/>    
    <end type="TARGET" refId="15"/>  
  </message>  
  <message id="16" 
    operation="findAdvisorsThatCanApply(java.util.List&lt;org.springframework.aop.Advisor&gt;,java.lang.Class&lt;?&gt;,java.lang.String):java.util.List&lt;org.springframework.aop.Advisor&gt;" 
    asynchronous="false">    
    <end type="SOURCE" refId="13"/>    
    <end type="TARGET" refId="17"/>  
  </message>  
  <message id="18" operation="findAdvisorBeans():java.util.List&lt;org.springframework.aop.Advisor&gt;" 
    asynchronous="false">    
    <end type="SOURCE" refId="15"/>    
    <end type="TARGET" refId="19"/>  
  </message>  
  <message id="20" 
    operation="findAdvisorsThatCanApply(java.util.List&lt;org.springframework.aop.Advisor&gt;,java.lang.Class&lt;?&gt;):java.util.List&lt;org.springframework.aop.Advisor&gt;" 
    asynchronous="false">    
    <end type="SOURCE" refId="17"/>    
    <end type="TARGET" refId="21"/>  
  </message>  
  <message id="24" 
    operation="beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class&lt;?&gt;,boolean,boolean):java.lang.String[]" 
    asynchronous="false">    
    <end type="SOURCE" refId="19"/>    
    <end type="TARGET" refId="25"/>  
  </message>
</sequence-diagram>