<?xml version="1.0" encoding="UTF-8"?>
<sequence-diagram version="1.2.3" icons="true" generate-combined-fragments="true">  
  <object id="1" language="java" name="java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject" 
    project="rdltest2" file="C:/Java/jdk1.8.0_111/jre/lib/rt.jar" binary="true" label="conditionObject" type="class" 
    autoSize="true">    
    <position height="-1" width="-1" x="11" y="0"/>    
    <execution id="2">      
      <position height="577" width="164" x="5" y="99"/>    
    </execution>    
    <execution id="4">      
      <position height="496" width="164" x="5" y="153"/>    
    </execution>    
    <execution id="6">      
      <position height="27" width="7" x="87" y="207"/>    
    </execution>    
    <execution id="14">      
      <position height="27" width="7" x="87" y="536"/>    
    </execution>    
    <execution id="16">      
      <position height="27" width="7" x="84" y="595"/>    
    </execution>  
  </object>  
  <object id="17" language="java" name="java.util.concurrent.locks.AbstractQueuedSynchronizer" project="rdltest2" 
    file="C:/Java/jdk1.8.0_111/jre/lib/rt.jar" binary="true" label="abstractQueuedSynchronizer" type="class" 
    autoSize="true">    
    <position height="-1" width="-1" x="292" y="0"/>    
    <execution id="8">      
      <position height="108" width="277" x="173" y="245"/>    
    </execution>    
    <execution id="19">      
      <position height="27" width="277" x="173" y="299"/>    
    </execution>    
    <execution id="10">      
      <position height="108" width="277" x="173" y="372"/>    
    </execution>    
    <execution id="21">      
      <position height="27" width="277" x="173" y="426"/>    
    </execution>    
    <execution id="12">      
      <position height="27" width="277" x="173" y="485"/>    
    </execution>  
  </object>  
  <message id="3" operation="await():void" asynchronous="false">    
    <end type="SOURCE" refId="2"/>    
    <end type="TARGET" refId="4"/>  
  </message>  
  <message id="5" operation="addConditionWaiter():java.util.concurrent.locks.AbstractQueuedSynchronizer.Node" 
    asynchronous="false">    
    <end type="SOURCE" refId="4"/>    
    <end type="TARGET" refId="6"/>  
  </message>  
  <message id="7" operation="fullyRelease(java.util.concurrent.locks.AbstractQueuedSynchronizer.Node):int" 
    asynchronous="false">    
    <end type="SOURCE" refId="4"/>    
    <end type="TARGET" refId="8"/>  
  </message>  
  <message id="9" operation="isOnSyncQueue(java.util.concurrent.locks.AbstractQueuedSynchronizer.Node):boolean" 
    asynchronous="false">    
    <end type="SOURCE" refId="4"/>    
    <end type="TARGET" refId="10"/>  
  </message>  
  <message id="11" operation="acquireQueued(java.util.concurrent.locks.AbstractQueuedSynchronizer.Node,int):boolean" 
    asynchronous="false">    
    <end type="SOURCE" refId="4"/>    
    <end type="TARGET" refId="12"/>  
  </message>  
  <message id="13" operation="unlinkCancelledWaiters():void" asynchronous="false">    
    <end type="SOURCE" refId="4"/>    
    <end type="TARGET" refId="14"/>  
  </message>  
  <message id="15" operation="reportInterruptAfterWait(int):void" asynchronous="false">    
    <end type="SOURCE" refId="4"/>    
    <end type="TARGET" refId="16"/>  
  </message>  
  <message id="18" operation="release(int):boolean" asynchronous="false">    
    <end type="SOURCE" refId="8"/>    
    <end type="TARGET" refId="19"/>  
  </message>  
  <message id="20" operation="findNodeFromTail(java.util.concurrent.locks.AbstractQueuedSynchronizer.Node):boolean" 
    asynchronous="false">    
    <end type="SOURCE" refId="10"/>    
    <end type="TARGET" refId="21"/>  
  </message>
</sequence-diagram>