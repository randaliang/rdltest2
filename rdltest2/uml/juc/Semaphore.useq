<?xml version="1.0" encoding="UTF-8"?>
<sequence-diagram version="1.2.3" icons="true" generate-combined-fragments="true">  
  <object id="1" language="java" name="java.util.concurrent.Semaphore" project="rdltest2" 
    file="C:/Java/jdk1.8.0_111/jre/lib/rt.jar" binary="true" label="semaphore" type="class" autoSize="true">    
    <position height="-1" width="-1" x="154" y="0"/>    
    <execution id="2">      
      <position height="582" width="127" x="5" y="102"/>    
    </execution>    
    <execution id="4">      
      <position height="501" width="127" x="5" y="156"/>    
    </execution>  
  </object>  
  <object id="7" language="java" name="java.util.concurrent.locks.AbstractQueuedSynchronizer" project="rdltest2" 
    file="C:/Java/jdk1.8.0_111/jre/lib/rt.jar" binary="true" label="abstractQueuedSynchronizer" type="class" 
    autoSize="true">    
    <position height="-1" width="-1" x="408" y="0"/>    
    <execution id="6">      
      <position height="447" width="277" x="136" y="183"/>    
    </execution>    
    <execution id="11">      
      <position height="338" width="277" x="136" y="265"/>    
    </execution>    
    <execution id="13">      
      <position height="27" width="7" x="274" y="319"/>    
    </execution>    
    <execution id="17">      
      <position height="27" width="7" x="274" y="417"/>    
    </execution>    
    <execution id="19">      
      <position height="27" width="7" x="274" y="485"/>    
    </execution>    
    <execution id="21">      
      <position height="27" width="7" x="274" y="549"/>    
    </execution>  
  </object>  
  <object id="22" language="java" name="java.util.concurrent.Semaphore.NonfairSync" project="daliang" 
    file="C:/Java/jdk1.8.0_111/jre/lib/rt.jar" binary="true" label="nonfairSync" type="class" autoSize="true">    
    <position height="-1" width="-1" x="-43" y="0"/>    
    <execution id="9">      
      <position height="27" width="130" x="417" y="210"/>    
    </execution>    
    <execution id="15">      
      <position height="27" width="130" x="417" y="358"/>    
    </execution>  
  </object>  
  <object id="23" language="java" name="java.util.concurrent.Semaphore.Sync" project="daliang" 
    file="C:/Java/jdk1.8.0_111/jre/lib/rt.jar" binary="true" label="sync" type="class" autoSize="true">    
    <position height="-1" width="-1" x="79" y="0"/>  
  </object>  
  <message id="3" operation="acquire():void" asynchronous="false">    
    <end type="SOURCE" refId="2"/>    
    <end type="TARGET" refId="4"/>  
  </message>  
  <message id="5" operation="acquireInterruptibly(int):void" asynchronous="false">    
    <end type="SOURCE" refId="4"/>    
    <end type="TARGET" refId="6"/>  
  </message>  
  <message id="8" operation="tryAcquireShared(int):int" asynchronous="false">    
    <end type="SOURCE" refId="6"/>    
    <end type="TARGET" refId="9"/>  
  </message>  
  <message id="10" operation="doAcquireSharedInterruptibly(int):void" asynchronous="false">    
    <end type="SOURCE" refId="6"/>    
    <end type="TARGET" refId="11"/>  
  </message>  
  <message id="12" 
    operation="addWaiter(java.util.concurrent.locks.AbstractQueuedSynchronizer.Node):java.util.concurrent.locks.AbstractQueuedSynchronizer.Node" 
    asynchronous="false">    
    <end type="SOURCE" refId="11"/>    
    <end type="TARGET" refId="13"/>  
  </message>  
  <message id="14" operation="tryAcquireShared(int):int" asynchronous="false">    
    <end type="SOURCE" refId="11"/>    
    <end type="TARGET" refId="15"/>  
  </message>  
  <message id="16" 
    operation="shouldParkAfterFailedAcquire(java.util.concurrent.locks.AbstractQueuedSynchronizer.Node,java.util.concurrent.locks.AbstractQueuedSynchronizer.Node):boolean" 
    asynchronous="false">    
    <end type="SOURCE" refId="11"/>    
    <end type="TARGET" refId="17"/>  
  </message>  
  <message id="18" operation="parkAndCheckInterrupt():boolean" asynchronous="false">    
    <end type="SOURCE" refId="11"/>    
    <end type="TARGET" refId="19"/>  
  </message>  
  <message id="20" operation="cancelAcquire(java.util.concurrent.locks.AbstractQueuedSynchronizer.Node):void" 
    asynchronous="false">    
    <end type="SOURCE" refId="11"/>    
    <end type="TARGET" refId="21"/>  
  </message>
</sequence-diagram>